[
  {
    "markdown": "- Body\n- Headers (12)\n\n- Body\n- Headers (12)\n\n- Body\n- Headers (12)\n\n- Body\n- Headers (12)\n\n- Body\n- Headers (12)\n\n- Body\n- Headers (12)\n\n- Body\n- Headers (10)\n\nPublic\n\nDocumentation Settings\n\nENVIRONMENT\n\nNo Environment\n\nLAYOUT\n\nSingle Column\n\nLANGUAGE\n\ncURL - cURL\n\nERCASPAY DEVELOPER DOCUMENTATION\n\n[Introduction](#intro)\n\nGetting started\n\nAuthorization\n\nHTTPS Status Codes\n\nCheckout\n\nDirect Integration\n\nWordpress Integration\n\nAndroid Integration\n\nWebhook\n\n# ERCASPAY DEVELOPER DOCUMENTATION\n\nOfficial API Documentation for ErcasPay V1 APIs\n\nArchitecture: REST\n\nData Format: JSON\n\nSandbox url: [https://gw.ercaspay.com/api/v1](https://)\n\nLive base url: [https://api.ercaspay.com/api/v1](https://)\n\n## Request Headers\n\n\\\\* Accept: This field is required & must always be set to application/json\n\n\\\\* Content-Type: This field is required & must always be set to application/json\n\n\\\\* Authorization: \\* The initiate transaction endpoint requires a key to authorize the request. \\* Authorization is a combination of Bearer and your secret key, e.g. Bearer ECRS-TEST-SKLVbpD1J7DG9fwwdyddcAkEysTKsYD564S1NDSUBS.\n\nKeys can be obtained from your ErcasPay dashboard under developer settings. Kindly ensure that your authorization keys are kept safe, secure & shared only when absolutely necessary.\n\n## Sample:\n\njson\n\n```json highlighted-code__code\n{\n    \"Accept\": \"application/json\",\n    \"Content-Type\":\" application/json\",\n    \"Authorization\":\"Bearer {{Your secret Key}}\n}\n```\n\n## Response:\n\njson\n\n```json highlighted-code__code\n{\n    \"requestSuccessful\": true,\n    \"responseMessage\": \"success\",\n    \"responseCode\": \"success\",\n    \"responseBody\": []\n}\n```\n\n| **Field** | **Type** | **Description** |\n| --- | --- | --- |\n| requestSuccessful | boolean | This indicates if the request was successful or not with a true or false response |\n| responseMessage | string | This can be any message attached to the transaction |\n| responseCode | string | This can be 'success', 'failed' or 'pending' |\n| responseBody | array | Contains relevant response data for the transaction |\n\n# Getting started\n\nTo get started, sign up on Ercas by visiting [https://ercaspay.com](https://ercaspay.com) and verify your account. In the meantime, you can still make integrations with our APIs in test mode, you'll be able to switch to live mode once your account has been approved.\n\n# **Authorization**\n\nThere are two \"modes\" of operation for your ErcasPay account:\n\n- **Live Mode**: Real money, real transactions, real effects. Only switch to this after you've tested your integration thoroughly.\n\n- **Test Mode**: No real money is involved. Only our test cards and bank accounts can be used. We'll still send webhooks and email notifications, and most of the API functions are the same.\n\nLive mode Url: [https://merchant.ercaspay.com](https://merchant.ercaspay.com/)\n\nTest Mode Url: [https://sandbox-checkout.ercaspay.com](https://sandbox-checkout.ercaspay.com/)\n\n**Test keys will always have** TEST \\*\\*in the prefix (for example,\\`ERCAS-TEST-PK)\n\n**Live keys will always have** LIVE \\*\\*in the prefix (for example,ERCAS-LIVE-PK)\n\nEvery Api request on behalf of a business should have an Authorization header in the following format\n\njson\n\n```json highlighted-code__code\n{\n    Authorization: Bearer TestKey\n}\n```\n\n# HTTPS Status Codes\n\n##### **Succesful Codes**\n\n- 200 = **OK**. This implies that the result of an operation (API call) was successful\n\n- 201 = **Created**. A 201 status code indicates that a request was successful and as a result, a resource has been created (for example, successful registration of a new user)\n\n##### **Error Codes**\n\nWhen working with our API, you'll encounter some kinds of errors e.g, authorization errors, validation errors, server errors, Watu errors, and provider errors. Each type of error comes with an appropriate HTTP status code.\n\n> _400 =_ _**Bad Request**_ \\- this response code serves as a generic error code for failed validation requests. Validation errors are returned when your request fails one or more validation rules. Examples include not passing required parameters. They come with a 400 Bad Request status code\n\n> _401 =_ _**Unauthorized**_ \\- this response code is sent when the server encounters issues related to authentication/authorization such as CHECKSUM MISMATCH, UNKNOWN CLIENT, FRESH ACCESS TOKEN REQUIRED etc. You'll get authorization errors when you don't provide your secret key to authorize an API call, or when the key provided isn't correct\n\n> _403 =_ _**Forbidden / Access Denied**_ \\- this response code is sent when the server understood the request but refuses to authorize it. A request might be forbidden for reasons related or unrelated to credentials. For example - INCOMPLETE REQUEST PARAMETERS REQUIRED FOR AUTHENTICATION.\n\n> _404 =_ _**Not Found**_ \\- this response code is sent on attempt to locate a resource/route that doesn't or no longer exist(s)\n\n> _500_ = **Internal Server Error** \\- this response code is sent as a generic error code for failed requests that our server takes full responsibility for.\n\nAUTHORIZATIONBearer Token\n\nToken\n\n{{TOKEN}}\n\n## Checkout\n\nReadily implement the ErcasPay Checkout Page on your websites to enable your customers to make payments on your platform. ErcasPay Page provides your customers with various payment method options such as CARD, BANK TRANSFER, USSD, QRCODE\n\n![](https://content.pstmn.io/16b2c7de-5af5-4cb1-ae9f-21b728277d76/ZXJjYXNfY2hlY2tvdXRfZmxvd19kaWFncmFtLnBuZw==)\n\nPlease refer to the following links to have a better understanding of each payment channel flow\n\n- [Card Payment Flow](https://docs.ercaspay.com#915434f2-503f-4f6d-a2a0-3e288cf51a7e)\n- [Bank Transfer Flow](https://docs.ercaspay.com#46cc2284-0150-43bb-a641-c6374d6e3217)\n- [USSD Payment Flow](https://docs.ercaspay.com/#ef89610a-afe7-4789-a7de-48be8b0e9253)\n\nAUTHORIZATIONBearer Token\n\nThis folder is using Bearer Token from collection [ERCASPAY DEVELOPER DOCUMENTATION](#auth-info-3c78cfb9-5cfa-433f-8cf3-863da8f06deb)\n\n### POSTInitiate Transaction\n\n{{baseUrl}}/payment/initiate\n\nThis endpoint allows you to initialize a transaction on ErcasPay and it returns a checkout URL which you can load within a browser to display the payment form to your customer. The checkout URL has an expiry time of 90 minutes.\n\nView More\n\n| **Field** | **Mandatory & Optional** | **Description** |\n| --- | --- | --- |\n| amount | M | The amount to be paid by the customer. |\n| paymentReference | M | Merchant's Unique reference for the transaction. |\n| paymentMethods | O | Comma seperated string of payment methods (card, bank-transfer, qrcode, ussd, etc.). If not specified, all available payment methods enabled on the merchant dashboard will be used. |\n| customerName | M | Full name of the customer. |\n| customerEmail | M | Email address of the customer. |\n| customerPhoneNumber | O | Phone number of the customer. |\n| currency | M | The currency you want to receive payment in. If this is not specified, we use NGN as the default currency. A list of supported currencies are available on the landing page |\n| feeBearer | O | The bearer of the charge (either customer or merchant). If not selected, we use the set default on the merchant account. This can be found under settings -> charges |\n| redirectUrl | O | A URL which user will be redirected to, on completion of the payment, if not specified, the default merchant redirect url will be used. |\n| description | O | Description for the transaction. |\n| metadata | O | You can put in any additional information relatating to the transaction, if specified, this will be returned as part of the webhook. |\n\nAUTHORIZATIONBearer Token\n\nThis request is using Bearer Token from collection [ERCASPAY DEVELOPER DOCUMENTATION](#auth-info-3c78cfb9-5cfa-433f-8cf3-863da8f06deb)\n\nHEADERS\n\nAccept\n\napplication/json\n\nContent-Type\n\napplication/json\n\nAuthorization\n\nBearer {{secretKey}}\n\nBodyraw (json)\n\nView More\n\njson\n\n```json highlighted-code__code\n{\n    \"amount\": 10,\n    \"paymentReference\": \"R5md7gd9b4s3h2j5d67g\",\n    \"paymentMethods\": \"card,bank-transfer,ussd,qrcode\",\n    \"customerName\": \"John Doe\",\n    \"customerEmail\": \"johndoe@gmail.com\",\n    \"customerPhoneNumber\": \"09061626364\",\n    \"redirectUrl\": \"https://omolabakeventures.com\",\n    \"description\": \"The description for this payment goes here\",\n    \"currency\": \"USD\",\n    \"feeBearer\": \"customer\",\n    \"metadata\": {\n        \"firstname\": \"Ola\",\n        \"lastname\": \"Benson\",\n        \"email\": \"iie@mail.com\"\n    }\n}\n```\n\nExample Request\n\ninitiate transaction (Successful)\n\nView More\n\ncurl\n\n```curl highlighted-code__code\ncurl --location -g '{{baseUrl}}/payment/initiate' \\\n--header 'Accept: application/json' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: Bearer {{secretKey}}' \\\n--data-raw '{\n    \"amount\": 10,\n    \"paymentReference\": \"R5md7gd9b4s3h2j5d67g\",\n    \"paymentMethods\": \"card,bank-transfer,ussd,qrcode\",\n    \"customerName\": \"John Doe\",\n    \"customerEmail\": \"johndoe@gmail.com\",\n    \"customerPhoneNumber\": \"09061626364\",\n    \"redirectUrl\": \"https://omolabakeventures.com\",\n    \"description\": \"The description for this payment goes here\",\n    \"currency\": \"USD\",\n    \"feeBearer\": \"customer\",\n    \"metadata\": {\n        \"firstname\": \"Ola\",\n        \"lastname\": \"Benson\",\n        \"email\": \"iie@mail.com\"\n    }\n}'\n```\n\n200 OK\n\nExample Response\n\n- Body\n- Headers (12)\n\njson\n\n```json highlighted-code__code\n{\n  \"requestSuccessful\": true,\n  \"responseCode\": \"success\",\n  \"responseMessage\": \"success\",\n  \"responseBody\": {\n    \"paymentReference\": \"R5md7gd9b4s3h2j5d67g\",\n    \"transactionReference\": \"ERCS|20231113082706|1699860426792\",\n    \"checkoutUrl\": \"https://sandbox-checkout.ercaspay.com/ERCS|20231113082706|1699860426792\"\n  }\n}\n```\n\nServer\n\nnginx/1.18.0 (Ubuntu)\n\nContent-Type\n\napplication/json\n\nTransfer-Encoding\n\nchunked\n\nConnection\n\nkeep-alive\n\nCache-Control\n\nno-cache, private\n\nDate\n\nMon, 13 Nov 2023 07:27:06 GMT\n\nX-RateLimit-Limit\n\n60\n\nX-RateLimit-Remaining\n\n59\n\nAccess-Control-Allow-Origin\n\n\\*\n\nX-Frame-Options\n\nSAMEORIGIN\n\nX-XSS-Protection\n\n1; mode=block\n\nX-Content-Type-Options\n\nnosniff\n\n### GETVerify Transaction\n\n{{baseUrl}}/payment/transaction/verify/{transactionRef}\n\nWe highly recommend that when you receive a notification from us, you should initiate a verify transaction request to us with the transactionReference to confirm the actual status of that transaction before updating the records on your database.\n\nAUTHORIZATIONBearer Token\n\nThis request is using Bearer Token from collection [ERCASPAY DEVELOPER DOCUMENTATION](#auth-info-3c78cfb9-5cfa-433f-8cf3-863da8f06deb)\n\nHEADERS\n\nAccept\n\napplication/json\n\nContent-Type\n\napplication/json\n\nExample Request\n\nverify transaction {Successful}\n\ncurl\n\n```curl highlighted-code__code\ncurl --location -g '{{baseUrl}}/payment/transaction/verify/{transactionRef}' \\\n--header 'Accept: application/json' \\\n--header 'Content-Type: application/json'\n```\n\n200 OK\n\nExample Response\n\n- Body\n- Headers (12)\n\nView More\n\njson\n\n```json highlighted-code__code\n{\n  \"requestSuccessful\": true,\n  \"responseCode\": \"success\",\n  \"responseMessage\": \"Transaction fetched successfully\",\n  \"responseBody\": {\n    \"domain\": \"test\",\n    \"status\": \"SUCCESSFUL\",\n    \"ercs_reference\": \"ERCS|20231112152333|1699799013942\",\n    \"tx_reference\": \"CSHM|WLTP|48606GWR\",\n    \"amount\": 100,\n    \"description\": null,\n    \"paid_at\": \"2023-11-12T14:24:58.000000Z\",\n    \"created_at\": \"2023-11-12T14:23:33.000000Z\",\n    \"channel\": \"BANK_TRANSFER\",\n    \"currency\": \"NGN\",\n    \"metadata\": \"{\\\"firstname\\\":\\\"Ola\\\",\\\"lastname\\\":\\\"Benson\\\",\\\"email\\\":\\\"iie@mail.com\\\"}\",\n    \"fee\": 1.4,\n    \"fee_bearer\": \"customer\",\n    \"settled_amount\": 100,\n    \"customer\": {\n      \"name\": \"Olayemi Olaomo\",\n      \"phone_number\": \"09061628409\",\n      \"email\": \"ola@gmail.com\",\n      \"reference\": \"ZEKvFI-N8lMHY\"\n    }\n  }\n}\n```\n\nServer\n\nnginx/1.18.0 (Ubuntu)\n\nContent-Type\n\napplication/json\n\nTransfer-Encoding\n\nchunked\n\nConnection\n\nkeep-alive\n\nCache-Control\n\nno-cache, private\n\nDate\n\nMon, 13 Nov 2023 07:23:01 GMT\n\nX-RateLimit-Limit\n\n60\n\nX-RateLimit-Remaining\n\n58\n\nAccess-Control-Allow-Origin\n\n\\*\n\nX-Frame-Options\n\nSAMEORIGIN\n\nX-XSS-Protection\n\n1; mode=block\n\nX-Content-Type-Options\n\nnosniff\n\n## Direct Integration\n\nYou have the option to seamlessly integrate our Payment gateway directly into your platform. This method is particularly advantageous if you plan to establish a self-hosted Payment gateway instead of interfacing with our checkout system to facilitate payment processing.\n\nAUTHORIZATIONBearer Token\n\nToken\n\n<token>\n\n## Card\n\nCARD TRANSACTION FLOW\n\nThe card transaction procedures are determined by the type of card being used. When a transaction is initiated, our payment system identifies the card type and generates response codes, such as CO, C1, and C2. These codes indicate whether the payment process will involve a single or multiple layers before completion.\n\nFor further clarification, please check the diagram provided below.\n\n![](https://content.pstmn.io/2d3152fc-5914-44a1-baa8-03cdf33c2248/ZXJjYXNwYXlfY2FyZF9wYXltZW50X2Zsb3dfZGlhZ3JhbS5wbmc=)\n\nAUTHORIZATIONBearer Token\n\nThis folder is using Bearer Token from folder [Direct Integration](#auth-info-331dd5a6-cd76-4f50-9da6-96f315c22e89)\n\n### POSTInitiate Payment\n\n{{baseUrl}}/third-party/payment/cards/initialize\n\nThis endpoint facilitates the initiation of a card transaction. Upon initiation, the response received varies based on the type of card used. It may include a link to a 3D authentication page or a message indicating that an OTP (One-Time Password) has been sent to the registered phone number. As this integration is direct, it is your responsibility to retrieve and handle these responses accordingly.\n\nFor example, in the case of response code C1, you must provide an interface where the OTP sent to the registered phone number can be entered and submitted to the OTP endpoint. Similarly, for response code C2, redirection to the transactionAuth URL provided in the response is required, allowing the system to manage the subsequent steps of the process.\n\n| **Field** | **Mandatory & Optional** | **Description** |\n| --- | --- | --- |\n| payload | M | An encripted version of a card details. Card details should be encripted with RSA algorithm |\n| deviceDetails | M | This contains the device details |\n| payerDeviceDto | M | This is an object inside device details |\n| device | M | This is an object inside payerDeviceDto |\n| browser |  | This is an object inside device. |\n| browserDetails | M | This is an object inside device |\n| ipAddress | O | ipAddress of the customer device |\n\n## Card Encryption Sample Codes\n\nView More\n\njava\n\n```java highlighted-code__code\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport org.bouncycastle.jcajce.provider.asymmetric.rsa.BCRSAPublicKey;\nimport org.bouncycastle.jce.provider.BouncyCastleProvider;\nimport org.bouncycastle.util.io.pem.PemReader;\nimport org.springframework.core.io.ClassPathResource;\nimport org.springframework.core.io.Resource;\nimport javax.crypto.BadPaddingException;\nimport javax.crypto.Cipher;\nimport javax.crypto.IllegalBlockSizeException;\nimport javax.crypto.NoSuchPaddingException;\nimport java.io.FileInputStream;\nimport java.io.FileNotFoundException;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.security.*;\nimport java.security.spec.InvalidKeySpecException;\nimport java.security.spec.X509EncodedKeySpec;\nimport java.util.Base64;\npublic class Main {\n  public static void main(String[] args) throws NoSuchPaddingException, IllegalBlockSizeException, NoSuchAlgorithmException, BadPaddingException, NoSuchProviderException, InvalidKeyException, IOException {\n    //CARD ENCRYPTION SAMPLE CODE USING RSA\n    //YOUR CARD DETAILS\n    CardParams cardParams = new CardParams();\n    cardParams.setCvv(\"8XX\");\n    cardParams.setPin(\"5XXX\");\n    cardParams.setExpiryDate(\"07XX\");\n    cardParams.setPan(\"5399XXXXXXXXXXXX\");\n    //CONVERT YOUR CARD DETAILS TO STRING\n    ObjectMapper mapper = new ObjectMapper();\n    String cardParamToString = mapper.writeValueAsString(cardParams);\n    //ENCRYPT\n    String encryptedData = rsaEncrypt(cardParamToString);\n    //OUTPUT ENCRYPTED DATA\n    System.out.println(encryptedData);\n  }\n  public static String rsaEncrypt(String data) throws NoSuchPaddingException, NoSuchAlgorithmException,\n    NoSuchProviderException, IOException, InvalidKeyException, IllegalBlockSizeException, BadPaddingException, NoSuchPaddingException, IllegalBlockSizeException, BadPaddingException {\n    Security.addProvider(new BouncyCastleProvider());\n    byte[] encryptedBytes = data.getBytes();\n    Cipher cipher = Cipher.getInstance(\"RSA/ECB/PKCS1Padding\", \"BC\");\n    cipher.init(Cipher.ENCRYPT_MODE, (Key) retrievePublicKey());\n    byte[] encryptedMessage = cipher.doFinal(encryptedBytes);\n    return Base64.getEncoder().encodeToString(encryptedMessage);\n  }\n  private static BCRSAPublicKey retrievePublicKey() throws IOException {\n    return readPub(\"ercas-rsa-pubx\"); //Create a file that will hold your public key\n  }\n  private static BCRSAPublicKey readPub(String filename) throws FileNotFoundException, IOException {\n    Resource resource = new ClassPathResource(filename);\n    try (PemReader pemReader = new PemReader(new InputStreamReader(new FileInputStream(filename)))) {\n      KeyFactory factory = KeyFactory.getInstance(\"RSA\", \"BC\");\n      var pemKey = pemReader.readPemObject();\n      var keyByte = pemKey.getContent();\n      X509EncodedKeySpec pubKeySpec = new X509EncodedKeySpec(keyByte);\n      return (BCRSAPublicKey) factory.generatePublic(pubKeySpec);\n    } catch (NoSuchAlgorithmException | InvalidKeySpecException | NoSuchProviderException e) {\n      throw new RuntimeException(e);\n    }\n  }\n}\n```\n\nView More\n\nphp\n\n```php highlighted-code__code\nfunction encryptCard()\n{\n    $public_key = file_get_contents('key/rsa_public_key.pub');\n    // Remove \"RSA\" from the header\n    $public_key = str_replace(\"RSA\", \"\", $public_key);\n    // Remove leading and trailing whitespace\n    $public_key = trim($public_key);\n    // Card details\n    $cardParams = [\\\n        'cvv' => '8XX',\\\n        'pin' => '5XXX',\\\n        'expiryDate' => '07XX',\\\n        'pan' => '5399XXXXXXXXXXXX'\\\n    ];\n    // Convert card details to JSON\n    $cardJson = json_encode($cardParams);\n    // Encrypt the card details\n    if (openssl_public_encrypt($cardJson, $encrypted, $public_key)) {\n        // Return the encrypted data as a Base64-encoded string\n        return base64_encode($encrypted);\n    } else {\n        // Encryption failed\n        die(\"Error: Encryption failed - \" . openssl_error_string());\n    }\n}\necho encryptCard();\n```\n\nView More\n\npython\n\n```python highlighted-code__code\nimport json\nimport base64\nfrom Crypto.PublicKey import RSA\nfrom Crypto.Cipher import PKCS1_v1_5\nfrom Crypto.Hash import SHA1\n#DEPENDENCY : pycryptodome\n#RUN  pip install pycryptodome\ndef encryptCard():\n    # Read the public key\n    with open('key/rsa_public_key.pub', 'rb') as key_file:\n        public_key_data = key_file.read()\n    public_key = RSA.import_key(public_key_data)\n    # Card details\n    cardParams = {\n        'cvv' : '8XX',\n        'pin' : '5XXX',\n        'expiryDate' : '07XX',\n        'pan' : '5399XXXXXXXXXXXX'\n    }\n    # Convert card details to JSON\n    cardJson = json.dumps(cardParams).encode('utf-8')\n    # Encrypt the card details using PKCS1_v1_5 padding\n    cipher = PKCS1_v1_5.new(public_key)\n    encrypted = cipher.encrypt(cardJson)\n    # Return the encrypted data as a Base64-encoded string\n    return base64.b64encode(encrypted).decode('utf-8')\nprint(encryptCard())\n```\n\n**TEST CARDS**\n\nThe following test cards are available\n\n| **CARD TYPE** | **PAN** | **EXPIRY DATE** | **PIN** | **CVV** | **OTP** | **STATUS** |\n| --- | --- | --- | --- | --- | --- | --- |\n| MASTER | 5123450000000008 | 01/39 | 1234 | 100 |  | A dropp down box with available status will be provided |\n\nAUTHORIZATIONBearer Token\n\nToken\n\n{{TOKEN}}\n\nHEADERS\n\nAccept\n\napplication/json\n\nBodyraw (json)\n\nView More\n\njson\n\n```json highlighted-code__code\n{\n  \"payload\": \"Xyy3MrxoDNccMJjPO3zUiERBZxbMUXumcvg4iMQU1Uqix6351T1b4cWo6XKt/qM7lxzQjFBNoLveu9ZFBi20+EWIPxPRpCrru7oRsy1MjJKy2ysQ2RHG5RMCrzNGDZj3KvDElPoMZVtadomaEqa8FQ4g3i7s1mhdK4XHf2giVsmkA3FNuoGyUUXMU1JstmsVAdt75geMg5rbvcgICLmOrCl988STbXnaQpl81XMBhzhcAtkzielaUOosVBW4B87WSGq20XN/13h3p8vQ1CiW8WDfVr0Sw91UlvHbe2tZSyQ+tt5lFwxwAGLKbdeB74oU/mNf93MssaOOlb0FcsDuyQ==\",\n  \"transactionReference\": \"ERCS|20240809141139|1723209099142\",\n  \"deviceDetails\": {\n    \"payerDeviceDto\": {\n      \"device\": {\n        \"browser\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36\",\n        \"browserDetails\": {\n          \"3DSecureChallengeWindowSize\": \"FULL_SCREEN\",\n          \"acceptHeaders\": \"application/json\",\n          \"colorDepth\": 24,\n          \"javaEnabled\": true,\n          \"language\": \"en-US\",\n          \"screenHeight\": 473,\n          \"screenWidth\": 1600,\n          \"timeZone\": 273\n        },\n        \"ipAddress\": \"41.242.77.212\"\n      }\n    }\n  }\n}\n```\n\nExample Request\n\nsuccessful payment\n\nView More\n\ncurl\n\n```curl highlighted-code__code\ncurl --location -g '{{baseUrl}}/payment/cards/initialize' \\\n--header 'Accept: application/json' \\\n--data '{\n    \"payload\": \"hQk5jVRv1bqoNB57irP/gqkXvxiqXv+aTdplXbgzqUoJQpGGgBstFBB1YjtTM6+fg5xr+8GGTUOMbxweGvKno8UXYmmdDKBdb3R6JXS08PxG8ZFX2ktoMTkKVrHtt4LQS7Ee73lAA46wz7GDiRI3bj8eWNFxU8/fQ9nE3BbNkIh23RowRvocEiZkP3NQqDWUC94DP2x/+ipyjO6M9ouUf4VIuDTYrVoGKeCNtRHlo9RR6bFWOSGwDN0yTwxxjWX2Pr02pusxRgIodNrDTXzIVFh58zpFE8U42SMMtdeyKeNo+61UZPA4Aznwe6o3VElX0QXk2feq8K3Zo70odxfruw==\",\n    \"transactionReference\": \"ERCS|20230323155236|1679586756784903\"\n}'\n```\n\n200 OK\n\nExample Response\n\n- Body\n- Headers (12)\n\nView More\n\njson\n\n```json highlighted-code__code\n{\n  \"requestSuccessful\": true,\n  \"responseMessage\": \"success\",\n  \"responseCode\": \"C0\",\n  \"responseBody\": {\n    \"code\": \"C0\",\n    \"status\": \"SUCCESS\",\n    \"gatewayMessage\": \"APPROVED\",\n    \"transactionReference\": \"ERCS|20230323155236|1679586756784903\",\n    \"paymentReference\": \"dhgsygdbshjdg\",\n    \"amount\": 10000,\n    \"redirectUrl\": \"https://omolabakeventures.com\"\n  }\n}\n```\n\nServer\n\nnginx/1.23.3\n\nContent-Type\n\napplication/json\n\nTransfer-Encoding\n\nchunked\n\nConnection\n\nkeep-alive\n\nVary\n\nAccept-Encoding\n\nX-Powered-By\n\nPHP/8.1.17\n\nCache-Control\n\nno-cache, private\n\nDate\n\nTue, 28 Mar 2023 08:49:36 GMT\n\nX-RateLimit-Limit\n\n60\n\nX-RateLimit-Remaining\n\n59\n\nAccess-Control-Allow-Origin\n\n\\*\n\nContent-Encoding\n\ngzip\n\n### POSTSubmit OTP\n\n{{baseUrl}}/third-party/payment/cards/otp/submit/{transactionRef}\n\nThis endpoint is designed to receive OTP (One-Time Password) for card validation purposes. Upon submission, if the OTP is deemed valid, the customer's payment institution is authorized to debit the customer's bank account. If the debit transaction is successful, you will be redirected accordingly.\n\n| Field | **Mandatory & Optional** | Description |\n| --- | --- | --- |\n| otp | M | Otp that was sent to the registered number |\n|  | M | Otp that was sent to the registered number |\n| gatewayReference | M | gateway reference should be retrieve from {{baseUrl}}/payment/cards/initialize endpoint |\n\nAUTHORIZATIONBearer Token\n\nThis request is using Bearer Token from folder [Direct Integration](#auth-info-331dd5a6-cd76-4f50-9da6-96f315c22e89)\n\nHEADERS\n\nAccept\n\napplication/json\n\nBodyraw (json)\n\njson\n\n```json highlighted-code__code\n{\n    \"otp\": \"123456\",\n    \"gatewayReference\": \"1gHS60sPRO\"\n}\n```\n\nExample Request\n\nsubmit OTP\n\ncurl\n\n```curl highlighted-code__code\ncurl --location -g '{{baseUrl}}/payment/cards/otp/submit/transactionRef}' \\\n--header 'Accept: application/json' \\\n--data '{\n    \"otp\": \"123456\",\n    \"gatewayReference\": \"1gHS60sPRO\"\n}'\n```\n\n200 OK\n\nExample Response\n\n- Body\n- Headers (12)\n\nView More\n\njson\n\n```json highlighted-code__code\n{\n  \"requestSuccessful\": true,\n  \"responseMessage\": \"success\",\n  \"responseCode\": \"00\",\n  \"responseBody\": {\n    \"status\": \"SUCCESS\",\n    \"gatewayMessage\": \"OTP Authorization Successful\",\n    \"transactionReference\": \"ERCS|20230323155236|1679586756784903\",\n    \"paymentReference\": \"dhgsygdbshjdg\",\n    \"amount\": 10000,\n    \"callbackUrl\": \"https://omolabakeventures.com\"\n  }\n}\n```\n\nServer\n\nnginx/1.23.3\n\nContent-Type\n\napplication/json\n\nTransfer-Encoding\n\nchunked\n\nConnection\n\nkeep-alive\n\nVary\n\nAccept-Encoding\n\nX-Powered-By\n\nPHP/8.1.17\n\nCache-Control\n\nno-cache, private\n\nDate\n\nThu, 30 Mar 2023 08:21:40 GMT\n\nX-RateLimit-Limit\n\n60\n\nX-RateLimit-Remaining\n\n58\n\nAccess-Control-Allow-Origin\n\n\\*\n\nContent-Encoding\n\ngzip\n\n### POSTResend OTP\n\n{{baseUrl}}/third-party/payment/cards/otp/resend/{transactionRef}\n\nAfter receiving the gatewayReference as part of the response from the {{baseUrl}}/payment/cards/initialize endpoint, you have the option to initiate the OTP resend endpoint. This allows for the reissuance of the OTP (One-Time Password) associated with the transaction.\n\n| Field | **Mandatory & Optional** | Description |\n| --- | --- | --- |\n| gatewayReference | M | gateway reference should be retrieve from {{baseUrl}}/payment/cards/initialize endpoint |\n\nAUTHORIZATIONBearer Token\n\nThis request is using Bearer Token from folder [Direct Integration](#auth-info-331dd5a6-cd76-4f50-9da6-96f315c22e89)\n\nHEADERS\n\nAccept\n\napplication/json\n\nBodyraw (json)\n\njson\n\n```json highlighted-code__code\n{\n    \"gatewayReference\": \"Cd7qtRufjL\"\n}\n```\n\nExample Request\n\nresend otp\n\ncurl\n\n```curl highlighted-code__code\ncurl --location -g '{{baseUrl}}/payment/cards/otp/resend/ERCS|20230323155236|1679586756784903' \\\n--header 'Accept: application/json' \\\n--data '{\n    \"gatewayReference\": \"Cd7qtRufjL\"\n}'\n```\n\n200 OK\n\nExample Response\n\n- Body\n- Headers (12)\n\njson\n\n```json highlighted-code__code\n{\n  \"requestSuccessful\": true,\n  \"responseMessage\": \"success\",\n  \"responseCode\": \"00\",\n  \"responseBody\": {\n    \"status\": \"SUCCESS\",\n    \"gatewayMessage\": \"OTP Resent\",\n    \"transactionReference\": \"ERCS|20230323155236|1679586756784903\",\n    \"paymentReference\": \"dhgsygdbshjdg\"\n  }\n}\n```\n\nServer\n\nnginx/1.23.3\n\nContent-Type\n\napplication/json\n\nTransfer-Encoding\n\nchunked\n\nConnection\n\nkeep-alive\n\nVary\n\nAccept-Encoding\n\nX-Powered-By\n\nPHP/8.1.17\n\nCache-Control\n\nno-cache, private\n\nDate\n\nThu, 30 Mar 2023 09:31:50 GMT\n\nX-RateLimit-Limit\n\n60\n\nX-RateLimit-Remaining\n\n59\n\nAccess-Control-Allow-Origin\n\n\\*\n\nContent-Encoding\n\ngzip\n\n### GETCard Details\n\n{{baseUrl}}/third-party/payment/cards/details/{transactionRef}\n\nThis request retrieves the details of a card transaction using the specified transaction reference.\n\nDescription:\n\nOur **GET** Card Details endpoint is used to retrieve the details of a card transaction based on the provided transaction reference. It requires authentication using a Bearer Token.This endpoint allows you to access comprehensive information about a card transaction, aiding in transaction monitoring, reconciliation, and auditing.\n\nAUTHORIZATIONBearer Token\n\nThis request is using Bearer Token from folder [Direct Integration](#auth-info-331dd5a6-cd76-4f50-9da6-96f315c22e89)\n\nExample Request\n\nCard Details {Successful}\n\ncurl\n\n```curl highlighted-code__code\ncurl --location -g '{{baseUrl}}/payment/cards/details/ERCS|20230801124135|1690890095404'\n```\n\n200 OK\n\nExample Response\n\n- Body\n- Headers (12)\n\njson\n\n```json highlighted-code__code\n{\n  \"requestSuccessful\": true,\n  \"responseMessage\": \"success\",\n  \"responseCode\": \"00\",\n  \"responseBody\": {\n    \"amount\": 10000,\n    \"reference\": \"ERCS|20230801124135|1690890095404\"\n  }\n}\n```\n\nServer\n\nnginx/1.25.1\n\nContent-Type\n\napplication/json\n\nTransfer-Encoding\n\nchunked\n\nConnection\n\nkeep-alive\n\nVary\n\nAccept-Encoding\n\nX-Powered-By\n\nPHP/8.2.8\n\nCache-Control\n\nno-cache, private\n\nDate\n\nTue, 01 Aug 2023 11:57:21 GMT\n\nX-RateLimit-Limit\n\n60\n\nX-RateLimit-Remaining\n\n57\n\nAccess-Control-Allow-Origin\n\n\\*\n\nContent-Encoding\n\ngzip\n\n### POSTVerify Card Transaction\n\n{{baseUrl}}/third-party/payment/cards/transaction/verify\n\nOur verify card transaction endpoint verifies a card transaction and confirms its validity.\n\nDescription:\n\n- This POST request is used to verify the validity of a card transaction.\n- It allows the system to confirm whether the card transaction is authentic and can proceed further.\n\nThis endpoint is crucial for ensuring the security and integrity of card-based transactions within the system.\n\nAUTHORIZATIONBearer Token\n\nThis request is using Bearer Token from folder [Direct Integration](#auth-info-331dd5a6-cd76-4f50-9da6-96f315c22e89)\n\nHEADERS\n\nAccept\n\napplication/json\n\nBodyraw (json)\n\njson\n\n```json highlighted-code__code\n{\n    \"reference\": \"tansactionRef\"\n}\n```\n\nExample Request\n\nVerify Card Transaction {Failed}\n\ncurl\n\n```curl highlighted-code__code\ncurl --location -g '{{baseUrl}}/payment/cards/transaction/verify/{transactionRef}' \\\n--header 'Accept: application/json' \\\n--data '{\n    \"reference\": \"Cd7qtRufjL\"\n}'\n```\n\n422 Unprocessable Content\n\nExample Response\n\n- Body\n- Headers (10)\n\njson\n\n```json highlighted-code__code\n{\n  \"requestSuccessful\": false,\n  \"responseBody\": [],\n  \"responseCode\": \"99\",\n  \"errorMessage\": \"The selected reference is invalid.\"\n}\n```\n\nServer\n\nnginx/1.25.1\n\nContent-Type\n\napplication/json\n\nTransfer-Encoding\n\nchunked\n\nConnection\n\nkeep-alive\n\nX-Powered-By\n\nPHP/8.2.8\n\nCache-Control\n\nno-cache, private\n\nDate\n\nFri, 28 Jul 2023 11:53:28 GMT\n\nX-RateLimit-Limit\n\n60\n\nX-RateLimit-Remaining\n\n57\n\nAccess-Control-Allow-Origin\n\n\\*\n\n## Bank Transfer\n\nWhen initiating a bank transfer, a virtual account will be generated for the customer. Subsequently, the customer is required to make payment to this account. Upon successful transfer, the customer must return to your custom checkout platform and click on an acknowledgment button labeled, for instance, \"I have made payment.\" This button should be configured to direct users to the Verify Transaction endpoint. Following this action, a response containing the status code and redirect URL will be dispatched. You can then utilize this response according to your requirements.\n\n![](https://content.pstmn.io/cdb6b004-c595-4798-a6c1-181202ed071a/ZXJjYXNfcGF5X2JhbmtfdHJhbnNmZXJfZGlhZ3JhbS5wbmc=)\n\nAUTHORIZATIONBearer Token\n\nThis folder is using Bearer Token from folder [Direct Integration](#auth-info-331dd5a6-cd76-4f50-9da6-96f315c22e89)",
    "metadata": {
      "title": "Ercaspay Developer Documentation",
      "description": "Official API Documentation for ErcasPay V1 APIs\n\nArchitecture: REST\n\nData Format: JSON\n\nSandbox url: [https://gw.ercaspay.com/api/v1](https://)\n\nLive base url: [https://api.ercaspay.com/api/v1](https://)\n\n## Request Headers\n\n\\* Accept: This field is required &amp; must always be set to application/json\n\n\\* Content-Type: This field is required &amp; must always be set to application/json\n\n\\* Authorization: \\* The initiate transaction endpoint requires a key to authorize the request. \\* Authorization is a combination of Bearer and your secret key, e.g. Bearer ECRS-TEST-SKLVbpD1J7DG9fwwdyddcAkEysTKsYD564S1NDSUBS.\n\nKeys can be obtained from your ErcasPay dashboard under developer settings. Kindly ensure that your authorization keys are kept safe, secure &amp; shared only when absolutely necessary.\n\n## Sample:\n\n``` json\n{\n    \"Accept\": \"application/json\",\n    \"Content-Type\":\" application/json\",\n    \"Authorization\":\"Bearer {{Your secret Key}}\n}\n\n ```\n\n## Response:\n\n``` json\n{\n    \"requestSuccessful\": true,\n    \"responseMessage\": \"success\",\n    \"responseCode\": \"success\",\n    \"responseBody\": []\n}\n\n ```\n\n| **Field** | **Type** | **Description** |\n| --- | --- | --- |\n| requestSuccessful | boolean | This indicates if the request was successful or not with a true or false response |\n| responseMessage | string | This can be any message attached to the transaction |\n| responseCode | string | This can be 'success', 'failed' or 'pending' |\n| responseBody | array | Contains relevant response data for the transaction |\n\n# Getting started\n\nTo get started, sign up on Ercas by visiting [https://ercaspay.com](https://ercaspay.com) and verify your account. In the meantime, you can still make integrations with our APIs in test mode, you'll be able to switch to live mode once your account has been approved.\n\n# **Authorization**\n\nThere are two \"modes\" of operation for your ErcasPay account:\n\n1. **Live Mode**: Real money, real transactions, real effects. Only switch to this after you've tested your integration thoroughly.\n    \n2. **Test Mode**: No real money is involved. Only our test cards and bank accounts can be used. We'll still send webhooks and email notifications, and most of the API functions are the same.\n    \n\nLive mode Url: [https://merchant.ercaspay.com](https://merchant.ercaspay.com/)\n\nTest Mode Url: [https://sandbox-checkout.ercaspay.com](https://sandbox-checkout.ercaspay.com/)\n\n**Test keys will always have** TEST **in the prefix (for example,\\`ERCAS-TEST-PK)\n\n**Live keys will always have** LIVE **in the prefix (for example,ERCAS-LIVE-PK)\n\nEvery Api request on behalf of a business should have an Authorization header in the following format\n\n``` json\n{\n    Authorization: Bearer TestKey\n}\n\n ```\n\n# HTTPS Status Codes\n\n##### **Succesful Codes**\n\n- 200 = **OK**. This implies that the result of an operation (API call) was successful\n    \n- 201 = **Created**. A 201 status code indicates that a request was successful and as a result, a resource has been created (for example, successful registration of a new user)\n    \n\n##### **Error Codes**\n\nWhen working with our API, you'll encounter some kinds of errors e.g, authorization errors, validation errors, server errors, Watu errors, and provider errors. Each type of error comes with an appropriate HTTP status code.\n\n&gt; _400 =_ _**Bad Request**_ - this response code serves as a generic error code for failed validation requests. Validation errors are returned when your request fails one or more validation rules. Examples include not passing required parameters. They come with a 400 Bad Request status code \n  \n&gt; _401 =_ _**Unauthorized**_ - this response code is sent when the server encounters issues related to authentication/authorization such as CHECKSUM MISMATCH, UNKNOWN CLIENT, FRESH ACCESS TOKEN REQUIRED etc. You'll get authorization errors when you don't provide your secret key to authorize an API call, or when the key provided isn't correct \n  \n&gt; _403 =_ _**Forbidden / Access Denied**_ - this response code is sent when the server understood the request but refuses to authorize it. A request might be forbidden for reasons related or unrelated to credentials. For example - INCOMPLETE REQUEST PARAMETERS REQUIRED FOR AUTHENTICATION. \n  \n&gt; _404 =_ _**Not Found**_ - this response code is sent on attempt to locate a resource/route that doesn't or no longer exist(s) \n  \n&gt; _500_ = **Internal Server Error** - this response code is sent as a generic error code for failed requests that our server takes full responsibility for.",
      "language": "en",
      "ogTitle": "Ercaspay Developer Documentation",
      "ogDescription": "Official API Documentation for ErcasPay V1 APIs\n\nArchitecture: REST\n\nData Format: JSON\n\nSandbox url: [https://gw.ercaspay.com/api/v1](https://)\n\nLive base url: [https://api.ercaspay.com/api/v1](https://)\n\n## Request Headers\n\n\\* Accept: This field is required &amp; must always be set to application/json\n\n\\* Content-Type: This field is required &amp; must always be set to application/json\n\n\\* Authorization: \\* The initiate transaction endpoint requires a key to authorize the request. \\* Authorization is a combination of Bearer and your secret key, e.g. Bearer ECRS-TEST-SKLVbpD1J7DG9fwwdyddcAkEysTKsYD564S1NDSUBS.\n\nKeys can be obtained from your ErcasPay dashboard under developer settings. Kindly ensure that your authorization keys are kept safe, secure &amp; shared only when absolutely necessary.\n\n## Sample:\n\n``` json\n{\n    \"Accept\": \"application/json\",\n    \"Content-Type\":\" application/json\",\n    \"Authorization\":\"Bearer {{Your secret Key}}\n}\n\n ```\n\n## Response:\n\n``` json\n{\n    \"requestSuc...",
      "ogUrl": "https://docs.ercaspay.com",
      "ogLocaleAlternate": [],
      "ogSiteName": "ERCASPAY DEVELOPER DOCUMENTATION",
      "viewport": "width=device-width,initial-scale=1",
      "top-bar": "FFFFFF",
      "highlight": "FF6C37",
      "right-sidebar": "303030",
      "documentationTheme": "light",
      "top-bar-dark": "212121",
      "highlight-dark": "FF6C37",
      "right-sidebar-dark": "303030",
      "logo": "https://content.pstmn.io/52df97c9-5b21-47be-b389-42e0f586e20a/ZXJjYXNwYXktbG9nby5wbmc=",
      "logo-dark": "https://content.pstmn.io/52df97c9-5b21-47be-b389-42e0f586e20a/ZXJjYXNwYXktbG9nby5wbmc=",
      "run-js": "https://run.pstmn.io/button.js",
      "environmentUID": "-",
      "isEnvFetchError": "false",
      "collection-info-public": "true",
      "collection-isPublicCollection": "false",
      "ownerId": "26288419",
      "publishedId": "2sA2xiWrhA",
      "collectionId": "26288419-3c78cfb9-5cfa-433f-8cf3-863da8f06deb",
      "versionTagId": "latest",
      "documentationLayout": "classic-single-column",
      "generator": "Postman Documenter",
      "languages": "[{\"key\":\"csharp\",\"label\":\"C#\",\"variant\":\"HttpClient\"},{\"key\":\"csharp\",\"label\":\"C#\",\"variant\":\"RestSharp\"},{\"key\":\"curl\",\"label\":\"cURL\",\"variant\":\"cURL\"},{\"key\":\"dart\",\"label\":\"Dart\",\"variant\":\"http\"},{\"key\":\"go\",\"label\":\"Go\",\"variant\":\"Native\"},{\"key\":\"http\",\"label\":\"HTTP\",\"variant\":\"HTTP\"},{\"key\":\"java\",\"label\":\"Java\",\"variant\":\"OkHttp\"},{\"key\":\"java\",\"label\":\"Java\",\"variant\":\"Unirest\"},{\"key\":\"javascript\",\"label\":\"JavaScript\",\"variant\":\"Fetch\"},{\"key\":\"javascript\",\"label\":\"JavaScript\",\"variant\":\"jQuery\"},{\"key\":\"javascript\",\"label\":\"JavaScript\",\"variant\":\"XHR\"},{\"key\":\"c\",\"label\":\"C\",\"variant\":\"libcurl\"},{\"key\":\"nodejs\",\"label\":\"NodeJs\",\"variant\":\"Axios\"},{\"key\":\"nodejs\",\"label\":\"NodeJs\",\"variant\":\"Native\"},{\"key\":\"nodejs\",\"label\":\"NodeJs\",\"variant\":\"Request\"},{\"key\":\"nodejs\",\"label\":\"NodeJs\",\"variant\":\"Unirest\"},{\"key\":\"objective-c\",\"label\":\"Objective-C\",\"variant\":\"NSURLSession\"},{\"key\":\"ocaml\",\"label\":\"OCaml\",\"variant\":\"Cohttp\"},{\"key\":\"php\",\"label\":\"PHP\",\"variant\":\"cURL\"},{\"key\":\"php\",\"label\":\"PHP\",\"variant\":\"Guzzle\"},{\"key\":\"php\",\"label\":\"PHP\",\"variant\":\"HTTP_Request2\"},{\"key\":\"php\",\"label\":\"PHP\",\"variant\":\"pecl_http\"},{\"key\":\"powershell\",\"label\":\"PowerShell\",\"variant\":\"RestMethod\"},{\"key\":\"python\",\"label\":\"Python\",\"variant\":\"http.client\"},{\"key\":\"python\",\"label\":\"Python\",\"variant\":\"Requests\"},{\"key\":\"r\",\"label\":\"R\",\"variant\":\"httr\"},{\"key\":\"r\",\"label\":\"R\",\"variant\":\"RCurl\"},{\"key\":\"ruby\",\"label\":\"Ruby\",\"variant\":\"Net::HTTP\"},{\"key\":\"shell\",\"label\":\"Shell\",\"variant\":\"Httpie\"},{\"key\":\"shell\",\"label\":\"Shell\",\"variant\":\"wget\"},{\"key\":\"swift\",\"label\":\"Swift\",\"variant\":\"URLSession\"}]",
      "og:title": "Ercaspay Developer Documentation",
      "og:description": "Official API Documentation for ErcasPay V1 APIs\n\nArchitecture: REST\n\nData Format: JSON\n\nSandbox url: [https://gw.ercaspay.com/api/v1](https://)\n\nLive base url: [https://api.ercaspay.com/api/v1](https://)\n\n## Request Headers\n\n\\* Accept: This field is required &amp; must always be set to application/json\n\n\\* Content-Type: This field is required &amp; must always be set to application/json\n\n\\* Authorization: \\* The initiate transaction endpoint requires a key to authorize the request. \\* Authorization is a combination of Bearer and your secret key, e.g. Bearer ECRS-TEST-SKLVbpD1J7DG9fwwdyddcAkEysTKsYD564S1NDSUBS.\n\nKeys can be obtained from your ErcasPay dashboard under developer settings. Kindly ensure that your authorization keys are kept safe, secure &amp; shared only when absolutely necessary.\n\n## Sample:\n\n``` json\n{\n    \"Accept\": \"application/json\",\n    \"Content-Type\":\" application/json\",\n    \"Authorization\":\"Bearer {{Your secret Key}}\n}\n\n ```\n\n## Response:\n\n``` json\n{\n    \"requestSuc...",
      "og:site_name": "ERCASPAY DEVELOPER DOCUMENTATION",
      "og:url": "https://docs.ercaspay.com",
      "og:image": [
        "https://content.pstmn.io/52df97c9-5b21-47be-b389-42e0f586e20a/ZXJjYXNwYXktbG9nby5wbmc=",
        "https://content.pstmn.io/52df97c9-5b21-47be-b389-42e0f586e20a/ZXJjYXNwYXktbG9nby5wbmc="
      ],
      "twitter:title": "Ercaspay Developer Documentation",
      "twitter:card": "summary",
      "sourceURL": "https://docs.ercaspay.com/#9d085e38-8498-4c9a-8ad4-4358c0c9f29f",
      "url": "https://docs.ercaspay.com/#9d085e38-8498-4c9a-8ad4-4358c0c9f29f",
      "statusCode": 200
    },
    "scrape_id": "6947c55f-0b04-4bcd-a727-79d430f8f092"
  }
]